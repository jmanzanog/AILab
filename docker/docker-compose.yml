volumes:
  postgres_storage:
  ollama_storage:
  qdrant_storage:
  open-webui:
networks:
  demo:
    driver: bridge

x-ollama: &service-ollama
  image: ollama/ollama:latest
  networks:
    demo:
      aliases:
        - ollama
  restart: unless-stopped
  ports:
    - 11434:11434
  volumes:
    - ollama_storage:/root/.ollama

x-init-ollama: &init-ollama
  image: ollama/ollama:latest
  networks: [ 'demo' ]
  volumes:
    - ollama_storage:/root/.ollama
  entrypoint: /bin/sh
  command:
    - "-c"
    - |
      echo "⏳ Durmiendo 15s para que Ollama arranque por completo..."
      sleep 15
      echo "✅ Intentando descargar modelos: llama3.1:8b y nomic-embed-text:v1.5"
      OLLAMA_HOST=ollama:11434 ollama pull llama3.1:8b
      OLLAMA_HOST=ollama:11434 ollama pull llama3.2:3b
      OLLAMA_HOST=ollama:11434 ollama pull nomic-embed-text:v1.5

services:

  open-webui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: open-webui
    networks: [ 'demo' ]
    restart: unless-stopped
    ports:
      - "3000:8080"
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - open-webui:/app/backend/data

  postgres:
    image: postgres:16-alpine
    container_name: postgres
    networks: [ 'demo' ]
    restart: unless-stopped
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: password
      POSTGRES_DB: postgres
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -h localhost -U root -d postgres' ]
      interval: 5s
      timeout: 5s
      retries: 10

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks: [ 'demo' ]
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  ollama-cpu:
    profiles: [ "cpu" ]
    <<: *service-ollama
    container_name: ollama-cpu

  ollama-gpu:
    profiles: [ "gpu-nvidia" ]
    <<: *service-ollama
    container_name: ollama-gpu
    runtime: nvidia
    environment:
      - NVIDIA_VISIBLE_DEVICES=all

  ollama-pull-llama-cpu:
    profiles: [ "cpu" ]
    <<: *init-ollama
    container_name: ollama-pull-llama-cpu
    depends_on:
      - ollama-cpu

  ollama-pull-llama-gpu:
    profiles: [ "gpu-nvidia" ]
    <<: *init-ollama
    container_name: ollama-pull-llama-gpu
    depends_on:
      - ollama-gpu
